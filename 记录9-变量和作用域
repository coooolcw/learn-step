此章节主要参看红皮书p68以后内容(第四章)

1.基本数据类型和引用类型
此处参考犀牛书page47.
基本数据是不可改变的(主要疑问点在于字符串,实际上字符串不能改变原先的值,操作函数都是返回一个新字符串)

2.js的堆栈
https://www.cnblogs.com/chengguanhui/p/4737413.html  
概念参考

关于堆栈的操作与存储,见红皮书p69

3.属性与对象的比较
属性:值
对象:引用比较.
josn格式转换为string比较
深度比较http://stackoverflow.com/questions/1068834/object-comparison-in-javascript

4.函数参数的传递
参数传递见红皮书page70
参数是按照值传递的,当传递的是对象时,传递的是引用的值(即:把在内存中的地址复制给局部的变量)而不是直接传递引用(指针).
在函数内部的改变也可反映在外部的对象中(前提是传递的引用的值没有在函数内部改变).

5.检测类型
红皮书p72
instanceof 和typeof的区别和使用
注意 function也是一种object
typeof null 返回object,但是null instanceof任意  都是false
原因解释https://blog.csdn.net/weixin_42049636/article/details/81565461
大体是历史原因,可以理解为null是尚未存在的对象的占位符,因此它是对象但又不是对象

6.变量的作用域
红皮书73
主要概念:作用域链,变量对象


7.块级作用域
JS没有块级作用域

8.变量提升
犀牛书page57~58
某解释的ppt  https://www.slideshare.net/lijing00333/javascript-engine
以上解释都不清晰
最明确的说明在<你不知道的javascript>上卷
p37.

function优先于var  且同名冲突时优先于var
切记不可在if for等的{}内声明函数,会导致各种问题
如有必要可用函数表达式  var fn = function(){}


9.垃圾收集
红皮书p78
