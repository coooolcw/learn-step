比较不错的教程
https://deerchao.net/tutorials/regex/regex.htm
MDN   查找特殊字符时使用
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions
MSDN的正则教程
https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/regular-expression-language-quick-reference

重点代码/标识符/等
    一.创建方式
        字面量
            在加载脚本后，正则表达式字面值提供正则表达式的编译.当正则表达式保持不变时，使用此方法可获得更好的性能.
        构造函数
            使用构造函数提供正则表达式的运行时编译.使用构造函数，当你知道正则表达式模式将会改变，或者你不知道模式，并从另一个来源，如用户输入.
            使用变量传入时必须使用构造函数.
            注意:创建后改变传入的字符串变量不会改变正则对象(非引用创建).
            在使用时需要将字符串中的\进行转义
        
    二.转义字符
        转义字符列表见MDN.
        常用的转义字符
            \       基础转义
            \n      换行
            \t      tab
            \xhh    与代码hh匹配字符(两个十六进制数字)  不常用 ASC码
            \uhhhh	与代码 hhhh 匹配字符(四个十六进制数字) 稍常用 unicode码 常用于匹配汉字.大多数汉字范围都位于4e00 9fa5之间
                    因此[\u4e00-\u9fa5]可匹配绝大多数汉字
                    
            [xyz]   一个字符集合。匹配方括号中的任意字符，包括转义序列。
                    你可以使用破折号（-）来指定一个字符范围。
                    对于点（.）和星号（*）这样的特殊符号在一个字符集中没有特殊的意义。
                    他们不必进行转义，不过转义也是起作用的。
                    注意[a-zA-Z](√)    [a-Z](×)
                        [0-9](√)      [0-10](×)
                    
            [^xyz]  一个反向字符集。也就是说， 它匹配任何没有包含在方括号中的字符。
                    你可以使用破折号（-）来指定一个字符范围。
                    任何普通字符在这里都是起作用的。
                    
            .       (小数点)匹配除换行符之外的任何单个字符.等价于[^\n]
            \w      匹配一个单字字符（字母、数字或者下划线）.等价于[A-Za-z0-9_]
            \W      匹配一个非单字字符.等价于[^A-Za-z0-9_]
