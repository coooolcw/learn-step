面向对象MDN
    https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript
    
    MDN中的介绍,内容较为简单
    https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes

API参考
    ES6入门
        http://es6.ruanyifeng.com/#docs/class
        http://es6.ruanyifeng.com/#docs/class-extends

深入理解ES6
    p181
    从早期的类模拟开始
    入门参考这本
    
    重点:
        1.constructor
            
        2.静态方法和静态属性
            静态方法  
                    static
            静态属性
                    静态属性指的是 Class 本身的属性，即Class.propName，而不是定义在实例对象（this）上的属性。
                    class Foo {
                    }
                    Foo.prop = 1;
                    Foo.prop // 1
                    目前，只有这种写法可行，因为 ES6 明确规定，Class 内部只有静态方法，没有静态属性。
                    现在有一个提案提供了类的静态属性，写法是在实例属性法的前面，加上static关键字。
        3.类表达式
            const person = class {
                //...
            };
            
            自执行
            const person = new class {
                //...
            }();
        4.get/set
            与 ES5 一样，在“类”的内部可以使用get和set关键字，对某个属性设置存值函数和取值函数，拦截该属性的存取行为。
            class MyClass {
              constructor() {
                // ...
              }
              get prop() {
                return 'getter';
              }
              set prop(value) {
                console.log('setter: '+value);
              }
            }
            let inst = new MyClass();
            inst.prop = 123;
            // setter: 123
            inst.prop
            // 'getter'
        5.(次要内容)name
            name属性总是返回紧跟在class关键字后面的类名。
            若匿名则返回绑定的变量名
        6.new.target
