
https://zhuanlan.zhihu.com/p/22486908?refer=study-fe
解释得比较清楚的文章
次要参考https://www.ibm.com/developerworks/cn/linux/l-cn-closure/
https://www.cnblogs.com/zhuzhenwei918/p/6131345.html

1.函数外变量+函数 = 闭包  (注意:闭包不是函数,是一个整体环境)

2.实际使用闭包
在函数内return一个函数,使外部可以调用内部的数据
例如
function foo(){
  var local = 1;
  function bar(){
    local++;
    return local;
  }
  return bar;
}

var func = foo();
func();
3.闭包是由于函数内部可以使用函数外部的变量,而不是刻意设计的

4.闭包引起的垃圾收集和缓存释放的问题
http://www.cnblogs.com/rubylouvre/p/3345294.html
问题确实存在,但是现在已经可以较好地正确清理缓存

5.作用
   隐藏变量,可以在其他作用域访问函数内部的变量
   保留变量和变量环境
